name: Reusable workflow to run a benchmark on the platform

on:
  workflow_call:
    inputs:
      run-on:
        type: string
        required: true
        description: "runner to check the project"
      additional-task:
        type: string
        description: additional task to add to gradle call
        required: false
        default: ""
      warmups:
        description: 'number of warmups run before the actual benchmark'
        type: string
        required: false
      iterations:
        description: 'number of iterations in the benchmark'
        type: string
        required: false
      iteration-time:
        description: 'duration of individual integration in benchmark'
        type: string
        required: false
      iteration-time-unit:
        description: 'timeunit for iteration-time parameter'
        default: 's'
        type: string
        required: false
      report-format:
        description: 'format of the report'
        default: 'csv'
        type: string
        required: false

jobs:
  benchmark:
    runs-on: ${{ inputs.run-on }}
    steps:
      - name: 'Checkout Repository'
        uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version-file: .java-version
      - uses: actions/setup-python@v5
        with:
          python-version-file: .python-version
      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v2
      - name: Cache konan
        uses: actions/cache@v4
        with:
          path: ~/.konan
          key: ${{ runner.os }}-gradle-${{ hashFiles('*.gradle.kts') }}
          restore-keys: |
              ${{ runner.os }}-gradle-
      - name: Cache unicode data
        uses: actions/cache@v4
        with:
          path: build/unicode_dump
          key: unicode-dump-${{ hashFiles('build/unicode_dump/*') }}
          restore-keys: |
            unicode-dump-
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: wrapper
      - name: Run benchmarks
        run: >
          ./gradlew --no-daemon :benchmark:benchmark ${{ inputs.additional-task }}
          -Pbenchmark_warmups=${{ inputs.warmups }}
          -Pbenchmark_iterations=${{ inputs.iterations }}
          -Pbenchmark_iteration_time=${{ inputs.iteration-time }}
          -Pbenchmark_iteration_time_unit=${{ inputs.iteration-time-unit }}
          -Pbenchmark_report_format=${{ inputs.report-format }}
      - name: Install CSV to MD converter
        run: pip install csv2md
      - name: Add benchmark results to summary
        shell: bash
        run: |
          for report in $(find ./benchmark/build/reports/benchmarks/main -type f -name "*.csv")
          do
            file_name=$(basename "$report")
            platform="${file_name%.*}"
            echo "File $file_name"
            # remove empty lines
            sed -i -e '/^[[:space:]]*$/d' $report
            echo "::group::Report CSV"
            cat "$report"
            echo "::endgroup::"
            markdown_table=$(csv2md "$report")
            echo "::group::Report Markdown"
            echo "$markdown_table"
            echo "::endgroup::"
            echo "# Platform ${platform}" >> $GITHUB_STEP_SUMMARY 
            echo "$markdown_table" >> $GITHUB_STEP_SUMMARY
          done
