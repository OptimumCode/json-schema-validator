name: "CodeQL"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '19 19 * * 6'

jobs:
  dump-unicode-data:
    uses: ./.github/workflows/unicode-dump.yml
  analyze:
    needs:
      - dump-unicode-data
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      # required for all workflows
      security-events: write

      # required to fetch internal or private CodeQL packs
      packages: read

      # only required for workflows in private repositories
      actions: read
      contents: read
    env:
      LANGUAGE: java-kotlin
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ env.LANGUAGE }}
        build-mode: manual
    # Build
    - uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version-file: .java-version
    - name: Validate Gradle Wrapper
      uses: gradle/actions/wrapper-validation@v4
    - name: Cache konan
      uses: actions/cache@v4
      with:
        path: ~/.konan
        key: ${{ runner.os }}-gradle-${{ hashFiles('*.gradle.kts') }}
        restore-keys: |
            ${{ runner.os }}-gradle-
    - name: Cache unicode data
      uses: actions/cache@v4
      with:
        enableCrossOsArchive: true
        fail-on-cache-miss: true
        path: unicode_dump
        key: unicode-dump-${{ hashFiles('unicode_dump/*') }}
        restore-keys: |
            unicode-dump-
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4
      with:
        gradle-version: wrapper
    - name: Build
      run: ./gradlew --no-daemon -S -Dorg.gradle.dependency.verification=off -Dorg.gradle.warning.mode=none testClasses

    # Perform analysis
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{ env.LANGUAGE }}"