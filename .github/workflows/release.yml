name: "Create release"

on:
  workflow_dispatch:

env:
  VERSION_FILE: gradle.properties
  VERSION_PATTERN: '(?<=version=).+'

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      CURRENT_VERSION: ${{ steps.versions.outputs.CURRENT_VERSION }}
      NEXT_VERSION: ${{ steps.versions.outputs.NEXT_VERSION }}
      RELEASE_VERSION: ${{ steps.versions.outputs.RELEASE_VERSION }}
    steps:
      - name: 'Checkout Repository'
        uses: actions/checkout@v3
      - name: Get version
        id: versions
        uses: HardNorth/github-version-generate@v1.3.0
        with:
          version-source: file
          version-file: ${{ env.VERSION_FILE }}
          version-file-extraction-pattern: ${{ env.VERSION_PATTERN }}
  publish_artifacts:
    needs:
      - version
    runs-on: macos-latest
    steps:
      - name: 'Checkout Repository'
        uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version-file: .ci-java-version
      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1.0.6
      - name: Cache konan
        uses: actions/cache@v3.3.1
        with:
          path: ~/.konan
          key: ${{ runner.os }}-gradle-${{ hashFiles('*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2.6.0
        env:
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          SIGNING_SECRET_KEY: ${{ secrets.SIGNING_SECRET_KEY }}
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
        with:
          gradle-version: wrapper
          # should close and release staging repository
          arguments: |
            --no-daemon
            build
            publish
            closeAndReleaseStagingRepository
            -Pversion=${{ needs.version.outputs.RELEASE_VERSION }}
  create_release:
    runs-on: ubuntu-latest
    needs:
      - publish_artifacts
      - version
    steps:
      - name: 'Checkout Repository'
        uses: actions/checkout@v3
      - name: Store SHA of HEAD commit on ENV
        run: echo "GIT_HEAD=$(git rev-parse HEAD)" >> $GITHUB_ENV

      - name: Create tag
        id: create_tag
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.PUSH_PAT }}
          script: |
            const {GIT_HEAD} = process.env
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{ needs.version.outputs.RELEASE_VERSION }}",
              sha: `${GIT_HEAD}`
            })

      - name: Build changelog
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          configuration: changelog_config.json
          toTag: ${{ needs.version.outputs.RELEASE_VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create release
        id: create_release
        uses: ncipollo/release-action@v1.12.0
        with:
          body: ${{ steps.build_changelog.outputs.changelog }}
          name: Release ${{ needs.version.outputs.RELEASE_VERSION }}
          tag: ${{ needs.version.outputs.RELEASE_VERSION }}
          token: ${{ secrets.PUSH_PAT }}