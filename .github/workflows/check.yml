name: Check project

on:
  workflow_call:
    inputs:
      run-on:
        type: string
        required: true
        description: "runner to check the project"
      task:
        type: string
        required: true
        description: "task to check the platform targets"
      upload-code-coverage:
        type: boolean
        description: "enabled uploading coverage report to codecov"
        required: false
        default: false
    secrets:
      CODECOV_TOKEN:
        description: "token to upload codecov report"
        required: false

jobs:
  check:
    runs-on: ${{ inputs.run-on }}
    steps:
      - name: 'Install native dependencies'
        run: apt-get install -y libunistring-dev
        if: runner.os != 'Windows'
      - name: 'Checkout Repository'
        uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version-file: .java-version
      - uses: actions/setup-python@v5
        with:
          python-version-file: .python-version
      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v2
      - name: Cache konan
        uses: actions/cache@v4
        with:
          path: ~/.konan
          key: ${{ runner.os }}-gradle-${{ hashFiles('*.gradle.kts') }}
          restore-keys: |
              ${{ runner.os }}-gradle-
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: wrapper
      - name: Build
        run: ./gradlew --no-daemon --info ${{ inputs.task }} koverXmlReport -x :benchmark:benchmark
      - name: Upload coverage reports to Codecov
        if: inputs.upload-code-coverage && github.actor != 'dependabot[bot]'
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
