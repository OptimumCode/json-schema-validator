public abstract class io/github/optimumcode/json/pointer/JsonPointer {
	public static final field Companion Lio/github/optimumcode/json/pointer/JsonPointer$Companion;
	public static final field ROOT Lio/github/optimumcode/json/pointer/JsonPointer;
	public synthetic fun <init> (Lio/github/optimumcode/json/pointer/JsonPointer;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun <init> (Lio/github/optimumcode/json/pointer/JsonPointer;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun atIndex (I)Lio/github/optimumcode/json/pointer/JsonPointer;
	public final fun atProperty (Ljava/lang/String;)Lio/github/optimumcode/json/pointer/JsonPointer;
	public static final fun compile (Ljava/lang/String;)Lio/github/optimumcode/json/pointer/JsonPointer;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/optimumcode/json/pointer/JsonPointer$Companion {
	public final fun compile (Ljava/lang/String;)Lio/github/optimumcode/json/pointer/JsonPointer;
}

public final class io/github/optimumcode/json/pointer/JsonPointerExtensions {
	public static final fun at (Lkotlinx/serialization/json/JsonElement;Lio/github/optimumcode/json/pointer/JsonPointer;)Lkotlinx/serialization/json/JsonElement;
	public static final fun contains (Lio/github/optimumcode/json/pointer/JsonPointer;Ljava/lang/String;)Z
	public static final fun div (Lio/github/optimumcode/json/pointer/JsonPointer;Ljava/lang/String;)Lio/github/optimumcode/json/pointer/JsonPointer;
	public static final fun get (Lio/github/optimumcode/json/pointer/JsonPointer;I)Lio/github/optimumcode/json/pointer/JsonPointer;
	public static final fun plus (Lio/github/optimumcode/json/pointer/JsonPointer;Lio/github/optimumcode/json/pointer/JsonPointer;)Lio/github/optimumcode/json/pointer/JsonPointer;
	public static final fun relative (Lio/github/optimumcode/json/pointer/JsonPointer;Lio/github/optimumcode/json/pointer/JsonPointer;)Lio/github/optimumcode/json/pointer/JsonPointer;
	public static final fun startsWith (Lio/github/optimumcode/json/pointer/JsonPointer;Lio/github/optimumcode/json/pointer/JsonPointer;)Z
}

public final class io/github/optimumcode/json/pointer/JsonPointerKt {
	public static final fun JsonPointer (Ljava/lang/String;)Lio/github/optimumcode/json/pointer/JsonPointer;
}

public final class io/github/optimumcode/json/schema/AbsoluteLocation {
	public fun <init> (Lcom/eygraber/uri/Uri;Lio/github/optimumcode/json/pointer/JsonPointer;)V
	public final fun component1 ()Lcom/eygraber/uri/Uri;
	public final fun component2 ()Lio/github/optimumcode/json/pointer/JsonPointer;
	public final fun copy (Lcom/eygraber/uri/Uri;Lio/github/optimumcode/json/pointer/JsonPointer;)Lio/github/optimumcode/json/schema/AbsoluteLocation;
	public static synthetic fun copy$default (Lio/github/optimumcode/json/schema/AbsoluteLocation;Lcom/eygraber/uri/Uri;Lio/github/optimumcode/json/pointer/JsonPointer;ILjava/lang/Object;)Lio/github/optimumcode/json/schema/AbsoluteLocation;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getPath ()Lio/github/optimumcode/json/pointer/JsonPointer;
	public final fun getUri ()Lcom/eygraber/uri/Uri;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class io/github/optimumcode/json/schema/AnnotationKey {
	public static final field Companion Lio/github/optimumcode/json/schema/AnnotationKey$Companion;
	public synthetic fun <init> (Ljava/lang/String;Lkotlin/reflect/KClass;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public static final fun simple (Ljava/lang/String;Lkotlin/reflect/KClass;)Lio/github/optimumcode/json/schema/AnnotationKey;
	public fun toString ()Ljava/lang/String;
}

public final class io/github/optimumcode/json/schema/AnnotationKey$Companion {
	public final fun simple (Ljava/lang/String;Lkotlin/reflect/KClass;)Lio/github/optimumcode/json/schema/AnnotationKey;
}

public final class io/github/optimumcode/json/schema/Annotations {
	public static final field FORMAT_ANNOTATION Lio/github/optimumcode/json/schema/AnnotationKey;
}

public abstract interface class io/github/optimumcode/json/schema/ErrorCollector {
	public static final field Companion Lio/github/optimumcode/json/schema/ErrorCollector$Companion;
	public static final field EMPTY Lio/github/optimumcode/json/schema/ErrorCollector;
	public abstract fun onError (Lio/github/optimumcode/json/schema/ValidationError;)V
}

public final class io/github/optimumcode/json/schema/ErrorCollector$Companion {
}

public abstract interface annotation class io/github/optimumcode/json/schema/ExperimentalApi : java/lang/annotation/Annotation {
}

public final class io/github/optimumcode/json/schema/FormatBehavior : java/lang/Enum {
	public static final field ANNOTATION_AND_ASSERTION Lio/github/optimumcode/json/schema/FormatBehavior;
	public static final field ANNOTATION_ONLY Lio/github/optimumcode/json/schema/FormatBehavior;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lio/github/optimumcode/json/schema/FormatBehavior;
	public static fun values ()[Lio/github/optimumcode/json/schema/FormatBehavior;
}

public abstract class io/github/optimumcode/json/schema/FormatValidationResult {
	public synthetic fun <init> (ZLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun isValid ()Z
}

public abstract interface class io/github/optimumcode/json/schema/FormatValidator {
	public static final field Companion Lio/github/optimumcode/json/schema/FormatValidator$Companion;
	public static fun Invalid ()Lio/github/optimumcode/json/schema/FormatValidationResult;
	public static fun Valid ()Lio/github/optimumcode/json/schema/FormatValidationResult;
	public abstract fun validate (Lkotlinx/serialization/json/JsonElement;)Lio/github/optimumcode/json/schema/FormatValidationResult;
}

public final class io/github/optimumcode/json/schema/FormatValidator$Companion {
	public final fun Invalid ()Lio/github/optimumcode/json/schema/FormatValidationResult;
	public final fun Valid ()Lio/github/optimumcode/json/schema/FormatValidationResult;
}

public final class io/github/optimumcode/json/schema/JsonSchema {
	public static final field Companion Lio/github/optimumcode/json/schema/JsonSchema$Companion;
	public static final fun fromDefinition (Ljava/lang/String;)Lio/github/optimumcode/json/schema/JsonSchema;
	public static final fun fromDefinition (Ljava/lang/String;Lio/github/optimumcode/json/schema/SchemaType;)Lio/github/optimumcode/json/schema/JsonSchema;
	public static final fun fromJsonElement (Lkotlinx/serialization/json/JsonElement;)Lio/github/optimumcode/json/schema/JsonSchema;
	public static final fun fromJsonElement (Lkotlinx/serialization/json/JsonElement;Lio/github/optimumcode/json/schema/SchemaType;)Lio/github/optimumcode/json/schema/JsonSchema;
	public final fun validate (Lkotlinx/serialization/json/JsonElement;Lio/github/optimumcode/json/schema/ErrorCollector;)Z
	public final fun validate (Lkotlinx/serialization/json/JsonElement;Lio/github/optimumcode/json/schema/OutputCollector;)Ljava/lang/Object;
}

public final class io/github/optimumcode/json/schema/JsonSchema$Companion {
	public final fun fromDefinition (Ljava/lang/String;)Lio/github/optimumcode/json/schema/JsonSchema;
	public final fun fromDefinition (Ljava/lang/String;Lio/github/optimumcode/json/schema/SchemaType;)Lio/github/optimumcode/json/schema/JsonSchema;
	public static synthetic fun fromDefinition$default (Lio/github/optimumcode/json/schema/JsonSchema$Companion;Ljava/lang/String;Lio/github/optimumcode/json/schema/SchemaType;ILjava/lang/Object;)Lio/github/optimumcode/json/schema/JsonSchema;
	public final fun fromJsonElement (Lkotlinx/serialization/json/JsonElement;)Lio/github/optimumcode/json/schema/JsonSchema;
	public final fun fromJsonElement (Lkotlinx/serialization/json/JsonElement;Lio/github/optimumcode/json/schema/SchemaType;)Lio/github/optimumcode/json/schema/JsonSchema;
	public static synthetic fun fromJsonElement$default (Lio/github/optimumcode/json/schema/JsonSchema$Companion;Lkotlinx/serialization/json/JsonElement;Lio/github/optimumcode/json/schema/SchemaType;ILjava/lang/Object;)Lio/github/optimumcode/json/schema/JsonSchema;
}

public abstract interface class io/github/optimumcode/json/schema/JsonSchemaLoader {
	public static final field Companion Lio/github/optimumcode/json/schema/JsonSchemaLoader$Companion;
	public static fun create ()Lio/github/optimumcode/json/schema/JsonSchemaLoader;
	public abstract fun fromDefinition (Ljava/lang/String;)Lio/github/optimumcode/json/schema/JsonSchema;
	public abstract fun fromDefinition (Ljava/lang/String;Lio/github/optimumcode/json/schema/SchemaType;)Lio/github/optimumcode/json/schema/JsonSchema;
	public abstract fun fromJsonElement (Lkotlinx/serialization/json/JsonElement;)Lio/github/optimumcode/json/schema/JsonSchema;
	public abstract fun fromJsonElement (Lkotlinx/serialization/json/JsonElement;Lio/github/optimumcode/json/schema/SchemaType;)Lio/github/optimumcode/json/schema/JsonSchema;
	public abstract fun register (Ljava/lang/String;)Lio/github/optimumcode/json/schema/JsonSchemaLoader;
	public abstract fun register (Ljava/lang/String;Lio/github/optimumcode/json/schema/SchemaType;)Lio/github/optimumcode/json/schema/JsonSchemaLoader;
	public abstract fun register (Lkotlinx/serialization/json/JsonElement;)Lio/github/optimumcode/json/schema/JsonSchemaLoader;
	public abstract fun register (Lkotlinx/serialization/json/JsonElement;Lio/github/optimumcode/json/schema/SchemaType;)Lio/github/optimumcode/json/schema/JsonSchemaLoader;
	public abstract fun register (Lkotlinx/serialization/json/JsonElement;Ljava/lang/String;)Lio/github/optimumcode/json/schema/JsonSchemaLoader;
	public abstract fun register (Lkotlinx/serialization/json/JsonElement;Ljava/lang/String;Lio/github/optimumcode/json/schema/SchemaType;)Lio/github/optimumcode/json/schema/JsonSchemaLoader;
	public abstract fun registerWellKnown (Lio/github/optimumcode/json/schema/SchemaType;)Lio/github/optimumcode/json/schema/JsonSchemaLoader;
	public abstract fun withCustomFormat (Ljava/lang/String;Lio/github/optimumcode/json/schema/FormatValidator;)Lio/github/optimumcode/json/schema/JsonSchemaLoader;
	public abstract fun withCustomFormats (Ljava/util/Map;)Lio/github/optimumcode/json/schema/JsonSchemaLoader;
	public abstract fun withExtensions (Lio/github/optimumcode/json/schema/extension/ExternalAssertionFactory;[Lio/github/optimumcode/json/schema/extension/ExternalAssertionFactory;)Lio/github/optimumcode/json/schema/JsonSchemaLoader;
	public abstract fun withExtensions (Ljava/lang/Iterable;)Lio/github/optimumcode/json/schema/JsonSchemaLoader;
	public abstract fun withSchemaOption (Lio/github/optimumcode/json/schema/SchemaOption;Ljava/lang/Object;)Lio/github/optimumcode/json/schema/JsonSchemaLoader;
}

public final class io/github/optimumcode/json/schema/JsonSchemaLoader$Companion {
	public final fun create ()Lio/github/optimumcode/json/schema/JsonSchemaLoader;
}

public final class io/github/optimumcode/json/schema/JsonSchemaLoader$DefaultImpls {
	public static fun fromDefinition (Lio/github/optimumcode/json/schema/JsonSchemaLoader;Ljava/lang/String;)Lio/github/optimumcode/json/schema/JsonSchema;
	public static fun fromJsonElement (Lio/github/optimumcode/json/schema/JsonSchemaLoader;Lkotlinx/serialization/json/JsonElement;)Lio/github/optimumcode/json/schema/JsonSchema;
	public static fun register (Lio/github/optimumcode/json/schema/JsonSchemaLoader;Ljava/lang/String;)Lio/github/optimumcode/json/schema/JsonSchemaLoader;
	public static fun register (Lio/github/optimumcode/json/schema/JsonSchemaLoader;Lkotlinx/serialization/json/JsonElement;)Lio/github/optimumcode/json/schema/JsonSchemaLoader;
	public static fun register (Lio/github/optimumcode/json/schema/JsonSchemaLoader;Lkotlinx/serialization/json/JsonElement;Ljava/lang/String;)Lio/github/optimumcode/json/schema/JsonSchemaLoader;
	public static fun registerWellKnown (Lio/github/optimumcode/json/schema/JsonSchemaLoader;Lio/github/optimumcode/json/schema/SchemaType;)Lio/github/optimumcode/json/schema/JsonSchemaLoader;
}

public final class io/github/optimumcode/json/schema/JsonSchemaStream {
	public static final fun fromStream (Lio/github/optimumcode/json/schema/JsonSchema$Companion;Ljava/io/InputStream;)Lio/github/optimumcode/json/schema/JsonSchema;
}

public abstract class io/github/optimumcode/json/schema/OutputCollector {
	public static final field Companion Lio/github/optimumcode/json/schema/OutputCollector$Companion;
	public synthetic fun <init> (Lio/github/optimumcode/json/schema/OutputCollector;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static final fun basic ()Lio/github/optimumcode/json/schema/OutputCollector;
	public static final fun detailed ()Lio/github/optimumcode/json/schema/OutputCollector;
	public static final fun flag ()Lio/github/optimumcode/json/schema/OutputCollector;
	public abstract fun getOutput ()Ljava/lang/Object;
	protected final fun transformError (Lio/github/optimumcode/json/schema/ValidationError;)Lio/github/optimumcode/json/schema/ValidationError;
	public static final fun verbose ()Lio/github/optimumcode/json/schema/OutputCollector;
}

public final class io/github/optimumcode/json/schema/OutputCollector$Companion {
	public final fun basic ()Lio/github/optimumcode/json/schema/OutputCollector;
	public final fun detailed ()Lio/github/optimumcode/json/schema/OutputCollector;
	public final fun flag ()Lio/github/optimumcode/json/schema/OutputCollector;
	public final fun verbose ()Lio/github/optimumcode/json/schema/OutputCollector;
}

public final class io/github/optimumcode/json/schema/SchemaOption {
	public static final field Companion Lio/github/optimumcode/json/schema/SchemaOption$Companion;
	public static final field FORMAT_BEHAVIOR_OPTION Lio/github/optimumcode/json/schema/SchemaOption;
}

public final class io/github/optimumcode/json/schema/SchemaOption$Companion {
}

public final class io/github/optimumcode/json/schema/SchemaType : java/lang/Enum {
	public static final field Companion Lio/github/optimumcode/json/schema/SchemaType$Companion;
	public static final field DRAFT_2019_09 Lio/github/optimumcode/json/schema/SchemaType;
	public static final field DRAFT_2020_12 Lio/github/optimumcode/json/schema/SchemaType;
	public static final field DRAFT_7 Lio/github/optimumcode/json/schema/SchemaType;
	public static final fun find (Ljava/lang/String;)Lio/github/optimumcode/json/schema/SchemaType;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lio/github/optimumcode/json/schema/SchemaType;
	public static fun values ()[Lio/github/optimumcode/json/schema/SchemaType;
}

public final class io/github/optimumcode/json/schema/SchemaType$Companion {
	public final fun find (Ljava/lang/String;)Lio/github/optimumcode/json/schema/SchemaType;
}

public final class io/github/optimumcode/json/schema/ValidationError {
	public fun <init> (Lio/github/optimumcode/json/pointer/JsonPointer;Lio/github/optimumcode/json/pointer/JsonPointer;Ljava/lang/String;Ljava/util/Map;Lio/github/optimumcode/json/schema/AbsoluteLocation;)V
	public synthetic fun <init> (Lio/github/optimumcode/json/pointer/JsonPointer;Lio/github/optimumcode/json/pointer/JsonPointer;Ljava/lang/String;Ljava/util/Map;Lio/github/optimumcode/json/schema/AbsoluteLocation;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lio/github/optimumcode/json/pointer/JsonPointer;
	public final fun component2 ()Lio/github/optimumcode/json/pointer/JsonPointer;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/util/Map;
	public final fun component5 ()Lio/github/optimumcode/json/schema/AbsoluteLocation;
	public final fun copy (Lio/github/optimumcode/json/pointer/JsonPointer;Lio/github/optimumcode/json/pointer/JsonPointer;Ljava/lang/String;Ljava/util/Map;Lio/github/optimumcode/json/schema/AbsoluteLocation;)Lio/github/optimumcode/json/schema/ValidationError;
	public static synthetic fun copy$default (Lio/github/optimumcode/json/schema/ValidationError;Lio/github/optimumcode/json/pointer/JsonPointer;Lio/github/optimumcode/json/pointer/JsonPointer;Ljava/lang/String;Ljava/util/Map;Lio/github/optimumcode/json/schema/AbsoluteLocation;ILjava/lang/Object;)Lio/github/optimumcode/json/schema/ValidationError;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAbsoluteLocation ()Lio/github/optimumcode/json/schema/AbsoluteLocation;
	public final fun getDetails ()Ljava/util/Map;
	public final fun getMessage ()Ljava/lang/String;
	public final fun getObjectPath ()Lio/github/optimumcode/json/pointer/JsonPointer;
	public final fun getSchemaPath ()Lio/github/optimumcode/json/pointer/JsonPointer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class io/github/optimumcode/json/schema/ValidationOutput {
	public abstract fun getValid ()Z
}

public final class io/github/optimumcode/json/schema/ValidationOutput$Basic : io/github/optimumcode/json/schema/ValidationOutput {
	public fun <init> (ZLjava/util/Set;)V
	public synthetic fun <init> (ZLjava/util/Set;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Z
	public final fun component2 ()Ljava/util/Set;
	public final fun copy (ZLjava/util/Set;)Lio/github/optimumcode/json/schema/ValidationOutput$Basic;
	public static synthetic fun copy$default (Lio/github/optimumcode/json/schema/ValidationOutput$Basic;ZLjava/util/Set;ILjava/lang/Object;)Lio/github/optimumcode/json/schema/ValidationOutput$Basic;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getErrors ()Ljava/util/Set;
	public fun getValid ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/optimumcode/json/schema/ValidationOutput$Flag : io/github/optimumcode/json/schema/ValidationOutput {
	public static final field Companion Lio/github/optimumcode/json/schema/ValidationOutput$Flag$Companion;
	public static final field INVALID Lio/github/optimumcode/json/schema/ValidationOutput$Flag;
	public static final field VALID Lio/github/optimumcode/json/schema/ValidationOutput$Flag;
	public fun <init> (Z)V
	public final fun component1 ()Z
	public final fun copy (Z)Lio/github/optimumcode/json/schema/ValidationOutput$Flag;
	public static synthetic fun copy$default (Lio/github/optimumcode/json/schema/ValidationOutput$Flag;ZILjava/lang/Object;)Lio/github/optimumcode/json/schema/ValidationOutput$Flag;
	public fun equals (Ljava/lang/Object;)Z
	public fun getValid ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/optimumcode/json/schema/ValidationOutput$Flag$Companion {
}

public final class io/github/optimumcode/json/schema/ValidationOutput$OutputUnit : io/github/optimumcode/json/schema/ValidationOutput {
	public fun <init> (ZLio/github/optimumcode/json/pointer/JsonPointer;Lio/github/optimumcode/json/pointer/JsonPointer;Lio/github/optimumcode/json/schema/AbsoluteLocation;Ljava/lang/String;Ljava/util/Set;Ljava/util/Set;)V
	public synthetic fun <init> (ZLio/github/optimumcode/json/pointer/JsonPointer;Lio/github/optimumcode/json/pointer/JsonPointer;Lio/github/optimumcode/json/schema/AbsoluteLocation;Ljava/lang/String;Ljava/util/Set;Ljava/util/Set;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Z
	public final fun component2 ()Lio/github/optimumcode/json/pointer/JsonPointer;
	public final fun component3 ()Lio/github/optimumcode/json/pointer/JsonPointer;
	public final fun component4 ()Lio/github/optimumcode/json/schema/AbsoluteLocation;
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()Ljava/util/Set;
	public final fun component7 ()Ljava/util/Set;
	public final fun copy (ZLio/github/optimumcode/json/pointer/JsonPointer;Lio/github/optimumcode/json/pointer/JsonPointer;Lio/github/optimumcode/json/schema/AbsoluteLocation;Ljava/lang/String;Ljava/util/Set;Ljava/util/Set;)Lio/github/optimumcode/json/schema/ValidationOutput$OutputUnit;
	public static synthetic fun copy$default (Lio/github/optimumcode/json/schema/ValidationOutput$OutputUnit;ZLio/github/optimumcode/json/pointer/JsonPointer;Lio/github/optimumcode/json/pointer/JsonPointer;Lio/github/optimumcode/json/schema/AbsoluteLocation;Ljava/lang/String;Ljava/util/Set;Ljava/util/Set;ILjava/lang/Object;)Lio/github/optimumcode/json/schema/ValidationOutput$OutputUnit;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAbsoluteKeywordLocation ()Lio/github/optimumcode/json/schema/AbsoluteLocation;
	public final fun getAnnotations ()Ljava/util/Set;
	public final fun getError ()Ljava/lang/String;
	public final fun getErrors ()Ljava/util/Set;
	public final fun getInstanceLocation ()Lio/github/optimumcode/json/pointer/JsonPointer;
	public final fun getKeywordLocation ()Lio/github/optimumcode/json/pointer/JsonPointer;
	public fun getValid ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class io/github/optimumcode/json/schema/extension/ExternalAnnotationCollector {
	public abstract fun annotate (Lio/github/optimumcode/json/schema/AnnotationKey;Ljava/lang/Object;)V
	public abstract fun annotated (Lio/github/optimumcode/json/schema/AnnotationKey;)Ljava/lang/Object;
}

public abstract interface class io/github/optimumcode/json/schema/extension/ExternalAssertion {
	public abstract fun validate (Lkotlinx/serialization/json/JsonElement;Lio/github/optimumcode/json/schema/extension/ExternalAssertionContext;Lio/github/optimumcode/json/schema/ErrorCollector;)Z
}

public abstract interface class io/github/optimumcode/json/schema/extension/ExternalAssertionContext {
	public abstract fun getAnnotationCollector ()Lio/github/optimumcode/json/schema/extension/ExternalAnnotationCollector;
	public abstract fun getObjectPath ()Lio/github/optimumcode/json/pointer/JsonPointer;
}

public abstract interface class io/github/optimumcode/json/schema/extension/ExternalAssertionFactory {
	public abstract fun create (Lkotlinx/serialization/json/JsonElement;Lio/github/optimumcode/json/schema/extension/ExternalLoadingContext;)Lio/github/optimumcode/json/schema/extension/ExternalAssertion;
	public abstract fun getKeywordName ()Ljava/lang/String;
}

public abstract interface class io/github/optimumcode/json/schema/extension/ExternalLoadingContext {
	public abstract fun getSchemaPath ()Lio/github/optimumcode/json/pointer/JsonPointer;
}

