public abstract class io/github/optimumcode/json/pointer/JsonPointer {
	public static final field Companion Lio/github/optimumcode/json/pointer/JsonPointer$Companion;
	public static final field ROOT Lio/github/optimumcode/json/pointer/JsonPointer;
	public synthetic fun <init> (Ljava/lang/String;ILio/github/optimumcode/json/pointer/JsonPointer;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun <init> (Ljava/lang/String;ILio/github/optimumcode/json/pointer/JsonPointer;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun atIndex (I)Lio/github/optimumcode/json/pointer/JsonPointer;
	public final fun atProperty (Ljava/lang/String;)Lio/github/optimumcode/json/pointer/JsonPointer;
	public static final fun compile (Ljava/lang/String;)Lio/github/optimumcode/json/pointer/JsonPointer;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/optimumcode/json/pointer/JsonPointer$Companion {
	public final fun compile (Ljava/lang/String;)Lio/github/optimumcode/json/pointer/JsonPointer;
}

public final class io/github/optimumcode/json/pointer/JsonPointerExtensions {
	public static final fun at (Lkotlinx/serialization/json/JsonElement;Lio/github/optimumcode/json/pointer/JsonPointer;)Lkotlinx/serialization/json/JsonElement;
	public static final fun contains (Lio/github/optimumcode/json/pointer/JsonPointer;Ljava/lang/String;)Z
	public static final fun div (Lio/github/optimumcode/json/pointer/JsonPointer;Ljava/lang/String;)Lio/github/optimumcode/json/pointer/JsonPointer;
	public static final fun get (Lio/github/optimumcode/json/pointer/JsonPointer;I)Lio/github/optimumcode/json/pointer/JsonPointer;
	public static final fun plus (Lio/github/optimumcode/json/pointer/JsonPointer;Lio/github/optimumcode/json/pointer/JsonPointer;)Lio/github/optimumcode/json/pointer/JsonPointer;
	public static final fun relative (Lio/github/optimumcode/json/pointer/JsonPointer;Lio/github/optimumcode/json/pointer/JsonPointer;)Lio/github/optimumcode/json/pointer/JsonPointer;
	public static final fun startsWith (Lio/github/optimumcode/json/pointer/JsonPointer;Lio/github/optimumcode/json/pointer/JsonPointer;)Z
}

public final class io/github/optimumcode/json/pointer/JsonPointerKt {
	public static final fun JsonPointer (Ljava/lang/String;)Lio/github/optimumcode/json/pointer/JsonPointer;
}

public abstract interface class io/github/optimumcode/json/schema/ErrorCollector {
	public static final field Companion Lio/github/optimumcode/json/schema/ErrorCollector$Companion;
	public static final field EMPTY Lio/github/optimumcode/json/schema/ErrorCollector;
	public abstract fun onError (Lio/github/optimumcode/json/schema/ValidationError;)V
}

public final class io/github/optimumcode/json/schema/ErrorCollector$Companion {
}

public final class io/github/optimumcode/json/schema/JsonSchema {
	public static final field Companion Lio/github/optimumcode/json/schema/JsonSchema$Companion;
	public static final fun fromDefinition (Ljava/lang/String;)Lio/github/optimumcode/json/schema/JsonSchema;
	public static final fun fromDefinition (Ljava/lang/String;Lio/github/optimumcode/json/schema/SchemaType;)Lio/github/optimumcode/json/schema/JsonSchema;
	public static final fun fromJsonElement (Lkotlinx/serialization/json/JsonElement;)Lio/github/optimumcode/json/schema/JsonSchema;
	public static final fun fromJsonElement (Lkotlinx/serialization/json/JsonElement;Lio/github/optimumcode/json/schema/SchemaType;)Lio/github/optimumcode/json/schema/JsonSchema;
	public final fun validate (Lkotlinx/serialization/json/JsonElement;Lio/github/optimumcode/json/schema/ErrorCollector;)Z
}

public final class io/github/optimumcode/json/schema/JsonSchema$Companion {
	public final fun fromDefinition (Ljava/lang/String;)Lio/github/optimumcode/json/schema/JsonSchema;
	public final fun fromDefinition (Ljava/lang/String;Lio/github/optimumcode/json/schema/SchemaType;)Lio/github/optimumcode/json/schema/JsonSchema;
	public static synthetic fun fromDefinition$default (Lio/github/optimumcode/json/schema/JsonSchema$Companion;Ljava/lang/String;Lio/github/optimumcode/json/schema/SchemaType;ILjava/lang/Object;)Lio/github/optimumcode/json/schema/JsonSchema;
	public final fun fromJsonElement (Lkotlinx/serialization/json/JsonElement;)Lio/github/optimumcode/json/schema/JsonSchema;
	public final fun fromJsonElement (Lkotlinx/serialization/json/JsonElement;Lio/github/optimumcode/json/schema/SchemaType;)Lio/github/optimumcode/json/schema/JsonSchema;
	public static synthetic fun fromJsonElement$default (Lio/github/optimumcode/json/schema/JsonSchema$Companion;Lkotlinx/serialization/json/JsonElement;Lio/github/optimumcode/json/schema/SchemaType;ILjava/lang/Object;)Lio/github/optimumcode/json/schema/JsonSchema;
}

public final class io/github/optimumcode/json/schema/JsonSchemaStream {
	public static final fun fromStream (Lio/github/optimumcode/json/schema/JsonSchema$Companion;Ljava/io/InputStream;)Lio/github/optimumcode/json/schema/JsonSchema;
}

public final class io/github/optimumcode/json/schema/SchemaType : java/lang/Enum {
	public static final field Companion Lio/github/optimumcode/json/schema/SchemaType$Companion;
	public static final field DRAFT_2019_09 Lio/github/optimumcode/json/schema/SchemaType;
	public static final field DRAFT_2020_12 Lio/github/optimumcode/json/schema/SchemaType;
	public static final field DRAFT_7 Lio/github/optimumcode/json/schema/SchemaType;
	public static final fun find (Ljava/lang/String;)Lio/github/optimumcode/json/schema/SchemaType;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lio/github/optimumcode/json/schema/SchemaType;
	public static fun values ()[Lio/github/optimumcode/json/schema/SchemaType;
}

public final class io/github/optimumcode/json/schema/SchemaType$Companion {
	public final fun find (Ljava/lang/String;)Lio/github/optimumcode/json/schema/SchemaType;
}

public final class io/github/optimumcode/json/schema/ValidationError {
	public fun <init> (Lio/github/optimumcode/json/pointer/JsonPointer;Lio/github/optimumcode/json/pointer/JsonPointer;Ljava/lang/String;Ljava/util/Map;Lio/github/optimumcode/json/pointer/JsonPointer;)V
	public synthetic fun <init> (Lio/github/optimumcode/json/pointer/JsonPointer;Lio/github/optimumcode/json/pointer/JsonPointer;Ljava/lang/String;Ljava/util/Map;Lio/github/optimumcode/json/pointer/JsonPointer;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lio/github/optimumcode/json/pointer/JsonPointer;
	public final fun component2 ()Lio/github/optimumcode/json/pointer/JsonPointer;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/util/Map;
	public final fun component5 ()Lio/github/optimumcode/json/pointer/JsonPointer;
	public final fun copy (Lio/github/optimumcode/json/pointer/JsonPointer;Lio/github/optimumcode/json/pointer/JsonPointer;Ljava/lang/String;Ljava/util/Map;Lio/github/optimumcode/json/pointer/JsonPointer;)Lio/github/optimumcode/json/schema/ValidationError;
	public static synthetic fun copy$default (Lio/github/optimumcode/json/schema/ValidationError;Lio/github/optimumcode/json/pointer/JsonPointer;Lio/github/optimumcode/json/pointer/JsonPointer;Ljava/lang/String;Ljava/util/Map;Lio/github/optimumcode/json/pointer/JsonPointer;ILjava/lang/Object;)Lio/github/optimumcode/json/schema/ValidationError;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAbsoluteLocation ()Lio/github/optimumcode/json/pointer/JsonPointer;
	public final fun getDetails ()Ljava/util/Map;
	public final fun getMessage ()Ljava/lang/String;
	public final fun getObjectPath ()Lio/github/optimumcode/json/pointer/JsonPointer;
	public final fun getSchemaPath ()Lio/github/optimumcode/json/pointer/JsonPointer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

